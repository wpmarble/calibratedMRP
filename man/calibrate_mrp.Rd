% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/top-level-api.R
\name{calibrate_mrp}
\alias{calibrate_mrp}
\title{Calibrate Multilevel Regression and Poststratification Estimates}
\usage{
calibrate_mrp(
  model,
  ps_table,
  weight,
  targets,
  geography,
  outcomes = NULL,
  method = "plugin",
  uncertainty = "approximate",
  draw_ids = NULL
)
}
\arguments{
\item{model}{A fitted \code{brmsfit} object. This will typically be a model with
with multivariate binary outcomes. The model must include random intercepts
for \code{geography}.}

\item{ps_table}{A data frame representing the poststratification table. Each row corresponds to a population cell.}

\item{weight}{A \strong{string} giving the name of the column in \code{ps_table} containing population weights.}

\item{targets}{A data frame containing calibration targets. Must include \code{geography} and all outcome variables to be calibrated.}

\item{geography}{A \strong{string} giving the name of the geography variable.
Must be present in \code{ps_table} and \code{targets}, and used as a random intercept in \code{model}.}

\item{outcomes}{Optional character vector of outcome variables to calibrate.
If \code{NULL}, the outcome names are inferred from the \code{model} formula.}

\item{method}{Calibration method, either \code{"plugin"} or \code{"bayes"}.
Plug-in estimates use posterior means of predictions and correlations across outcomes
to compute logit shifts for calibration. Bayesian estimates compute the logit shifts
separately for each posterior draw, which are then summarized. Defaults to \code{"plugin"}.}

\item{uncertainty}{Method for uncertainty estimation. One of \code{"approximate"} (default), \code{"bayes"}, or \code{"none"}. Currently ignored.}

\item{draw_ids}{Optional vector of posterior draw indices to use. Defaults to all posterior draws.}
}
\value{
A data frame with the same rows as \code{ps_table} and additional columns for each calibrated outcome.
}
\description{
This is the top-level function for generating calibrated MRP estimates. It takes
a fitted multivariate \code{brms} model, a poststratification table, and calibration
targets, and returns a data frame with cell-level calibrated predictions.
}
\details{
This function supports two estimation approaches, a plug-in estimator and a
full Bayesian estimator. The plug-in approach involves computing the posterior
mean and standard deviation for each outcome in each cell, then applying the
calibration procedure to these cell-level summaries. The plug-in approach uses
the posterior mean covariance matrix across outcomes to perform the calibration.
The result of the plug-in estimation is a poststratification table with additional
calibrated outcome variables, with the suffix "_calib" added to the original
outcome names.

The full Bayesian approach performs the calibration procedure separately for
each draw from the posterior distribution in \code{model}. The result is a data
frame with the number of rows equal to the number of rows in \code{ps_table} times the
number of posterior draws. The data frame includes a \code{.draw} column indicating
which draw from the posterior each estimate comes from. Within each draw,
model-based estimates of the target variables match the ground truth exactly.
Researchers should summarize across \code{.draws} in downstream analyses to obtain
point estimates and uncertainty intervals.

Full Bayesian estimation is more computationally and memory intensive than the
plug-in approach. To limit the resources required, calibration can be performed
in parallel by splitting \code{ps_table} into groups defined by rows in \code{targets}.
For example, if you are calibrating to county-level election results stored
within \code{targets}, you can process one county in \code{ps_table} at at time.
}
\examples{
# See vignettes.
}
\references{
Marble, William and Joshua Clinton. 2025. "Improving Small-Area Estimates of Public
Opinion by Calibrating to Known Population Quantities."
\url{https://osf.io/preprints/socarxiv/u3ekq_v1}
}
