% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calibrate-preds.R
\name{calibrate_preds}
\alias{calibrate_preds}
\title{Recalibrate probabilities after computing logit shifts}
\usage{
calibrate_preds(
  ps_table,
  shifts,
  preds,
  geography,
  shift_suffix = "shift",
  calib_suffix = "calib"
)
}
\arguments{
\item{ps_table}{A data frame storing poststratification cells with (uncalibrated)
model-based predictions.}

\item{shifts}{A data frame of logit shift parameters computed by \code{\link[=logit_shift]{logit_shift()}}.
Each shift must be named \verb{\{pred\}_\{shift_suffix\}}, e.g., \code{voteshare_shift} if
the prediction variable in \code{ps_table} is \code{voteshare}.}

\item{preds}{One or more prediction variables in \code{ps_table} to recalibrate.
Accepts tidyselect syntax (e.g., \code{var}, \code{c(var1, var2)}, \code{starts_with()}).}

\item{geography}{Group variable variable linking \code{ps_table} and \code{shifts}.
This should be a single variable name (unquoted) that exists in both data frames.}

\item{shift_suffix}{String suffix for the shift variables, e.g. if the first outcome
variable is called \code{presvote} then the shift variable will be called
\code{presvote_shift}.}

\item{calib_suffix}{String suffix for calibrated vote probabilities. E.g., if
original prediction is valled \code{voteshare} then the calibrated prediction
will be called \code{voteshare_calib}.}
}
\value{
Returns \code{ps_table} with additional columns for calibrated predictions.
}
\description{
Takes the poststratification table and a table of logit shift parameters and
returns the calibrated cell-level probabilities.
}
\examples{
## Example poststratification table with predictions for voteshare and turnout
ps <- tibble::tibble(county = rep(c("A", "B"), each = 100),
                     demo_group = rep(1:100, 2),
                     pred_vote = plogis(rnorm(200, qlogis(0.4), 0.5)),
                     pred_turnout = plogis(rnorm(200, qlogis(0.3), 0.4)),
                     weight = runif(200, 0.2, 0.8)
                     )

## Calibration targets by county
targets <- tibble::tibble(
  county = c("A", "B"),
  vote_target = c(0.55, 0.45),
  turnout_target = c(0.65, 0.55)
)

## Compute logit shifts for both outcomes
shifts <- logit_shift(
  ps_table = ps,
  vars = c(pred_vote, pred_turnout),
  weight = weight,
  geography = county,
  calib_target = targets,
  calib_vars = c(vote_target, turnout_target)
)

## Calibrate predictions in poststratification table
ps <- calibrate_preds(ps_table = ps, shifts = shifts,
                      preds = c(pred_vote, pred_turnout),
                      geography = county)
head(ps)
}
