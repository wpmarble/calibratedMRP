% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logit-shift.R
\name{logit_shift}
\alias{logit_shift}
\title{Compute logit shifts for multiple outcomes}
\usage{
logit_shift(ps_table, vars, weight, geography, calib_target, calib_vars)
}
\arguments{
\item{ps_table}{A data frame of poststratification cells with predictions.}

\item{vars}{One or more outcome variables in \code{ps_table} to calibrate.
Accepts tidyselect syntax (e.g., \code{voteshare_gov}, \code{c(voteshare_gov, voteshare_pres)}, \code{starts_with("voteshare")}).}

\item{weight}{Weighting variable in \code{ps_table} storing population counts.}

\item{geography}{Grouping variable found in \code{ps_table} and \code{calib_data} used
for calibration.}

\item{calib_target}{A data frame with true targets by \code{geography}.}

\item{calib_vars}{Variables in \code{calib_target} storing true targets.
\code{vars} and \code{calib_vars} should be in the same order. Accepts tidyselect syntax.}
}
\value{
A data frame with logit shifts for each prediction variable and geography.
}
\description{
Calibrate multiple sets of model-based predictions to match known
geographic targets by computing logit intercept shifts for each outcome.
}
\examples{
## Example poststratification table with predictions for voteshare and turnout
ps <- tibble::tibble(county = rep(c("A", "B"), each = 100),
                     demo_group = rep(1:100, 2),
                     pred_vote = plogis(rnorm(200, qlogis(0.4), 0.5)),
                     pred_turnout = plogis(rnorm(200, qlogis(0.3), 0.4)),
                     weight = runif(200, 0.2, 0.8)
                     )

## Calibration targets by county
targets <- tibble::tibble(
  county = c("A", "B"),
  vote_target = c(0.55, 0.45),
  turnout_target = c(0.65, 0.55)
)

## Compute logit shifts for both outcomes
shifts <- logit_shift(
  ps_table = ps,
  vars = c(pred_vote, pred_turnout),
  weight = weight,
  geography = county,
  calib_target = targets,
  calib_vars = c(vote_target, turnout_target)
)
shifts # data frame with intercept shift needed for each geography

## Calibrate predictions using [calibrate_preds()]
ps <- calibrate_preds(ps_table = ps, shifts = shifts,
                      preds = c(pred_vote, pred_turnout),
                      geography = county)
head(ps)
}
